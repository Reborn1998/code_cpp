/*
 * _______________#########_______________________ 
 * ______________############_____________________ 
 * ______________#############____________________ 
 * _____________##__###########___________________ 
 * ____________###__######_#####__________________ 
 * ____________###_#######___####_________________ 
 * ___________###__##########_####________________ 
 * __________####__###########_####_______________ 
 * ________#####___###########__#####_____________ 
 * _______######___###_########___#####___________ 
 * _______#####___###___########___######_________ 
 * ______######___###__###########___######_______ 
 * _____######___####_##############__######______ 
 * ____#######__#####################_#######_____ 
 * ____#######__##############################____ 
 * ___#######__######_#################_#######___ 
 * ___#######__######_######_#########___######___ 
 * ___#######____##__######___######_____######___ 
 * ___#######________######____#####_____#####____ 
 * ____######________#####_____#####_____####_____ 
 * _____#####________####______#####_____###______ 
 * ______#####______;###________###______#________ 
 * ________##_______####________####______________ 
 * 
 * @Author: Chenjun Ding
 * @Date: 2021-07-04 13:29:30
 * @LastEditTime: 2021-07-12 14:30:26
 * @LastEditors: Chenjun Ding
 * @Description: 
 */

#include<bits/stdc++.h>
using namespace std;
struct Mouse{
    int weight;
    int rank;
    int id;
    bool flag;
}mouse[1010];
queue<int> q;
int main(){
    int np,ng;
    int id;
    scanf("%d%d",&np,&ng);
    for(int i=0;i<np;i++){
        scanf("%d",&mouse[i].weight); 
    }
    for(int i=0;i<np;i++){
        scanf("%d",&id);
        q.push(id);
    }
    int temp=np,group;
	while(q.size()!=1){
		group = temp/ng + (temp%ng==0?0:1);
		for(int i=0;i<group;i++){
			int k = q.front();
			for(int j=0;j<ng;j++){
				if(i*ng+j>=temp) break;
				int front= q.front();
				if(mouse[k].weight<mouse[front].weight) k = front;
				mouse[front].rank = group+1;
				q.pop();
			}
			q.push(k);
		}
		temp = group;
	}
	mouse[q.front()].rank = 1;
	for(int i=0;i<np;i++){
		printf("%d ",mouse[i].rank);
	}
}


